---
title: "Jakolof Bay Bivalve Clearance"
author: 
  - name: Paul Cziko
    affiliation: NOAA - NCCOS - Kasitsna Bay Lab 
  - name: Grace Ellis
    affiliation: Smith College
  - name: Maggie Harper
    affiliation: Middlebury College
  - name: Ross Whippo
    affiliation: NOAA - NCCOS - Kasitsna Bay Lab
format: html
embed-resources: TRUE
editor: visual
bibliography: references.bib 
toc: true
toc-depth: 4
---

```{r}
#| echo: false
#| print: false
#| warning: false

setwd("~/git/kbay_filterfeeders")

library(tidyverse)
library(viridis)
library(terra)
library(leaflet)
library(scales)

# FUNCTIONS
rad2deg <- function(rad) {(rad * 180) / (pi)}
deg2rad <- function(deg) {(deg * pi) / (180)}

# command to read in data to R
mussel_data <- read_csv("data/mussel_data.csv", 
                        col_types = cols(polygon_ID = col_character(), 
                                         quadrat = col_character(), 
                                         site = col_character())) 

# recode quadrat factor
mussel_data <- mussel_data %>%
  mutate(quadrat = case_when(position_percent == "10" ~ "1",
                             position_percent == "30" ~ "2",
                             position_percent == "50" ~ "3",
                             position_percent == "70" ~ "4",
                             position_percent == "90" ~ "5")) 
           
# reorder site factor
mussel_data <- mussel_data %>%
  mutate(site = factor(site, levels = c("1", "2", "3", "4", "5",
                                              "6", "7", "8", "9", "10")))

# clearance equation: Rc = 0.0002L^2.19 from Jones et al. 1992
mussel_data <- mussel_data %>%
  mutate(filtration_l_hr = 0.0002 * length_mm^2.19)

# wet weight: ww = 0.000224L^2.71 calculated in the field interns
mussel_data <- mussel_data %>%
  mutate(wet_weight_g = 0.000224 * length_mm^2.71)

# import the shoreline spatial data
tidelands <- terra::vect("data/tidalbands_shore_information_translated/tidalbands_shore_information_translatedPolygon.shp")

# turn the spatial layer into a data.frame (spreadsheet) and summarize its contents
tidelands_df <- data.frame(values(tidelands))

# import a bounding shape for Jakolof Bay
jako <- terra::vect("data/Jakolof_Bay_poly.kml")

# extract the tidelands crs
newcrs <- crs(tidelands)

# reproject the Jakolof layer in the new crs
jako_new <- terra:: project(jako, newcrs)

# crop the tidelands layer to just Jakolof
tidelands_jako <- terra::crop(tidelands, jako_new)

# standardize substrate names
jako_df <- data.frame(tidelands_jako)
jako_df <- jako_df %>%
  mutate(temp = str_extract(high_slope, "[0-9]-[0-9]*")) %>%
  mutate(temp = replace_na(temp, "60")) %>%
  separate_wider_delim(temp, "-", names = c("low", "high"), too_few = "align_start") %>%
  mutate(high = replace_na(high, "60")) %>%
  mutate(across(c(high, low), as.numeric)) %>%
  rowwise() %>%
  mutate(high_slope_mean = mean(c(low, high))) %>% # high mean slope
  mutate(temp1 = str_extract(highmediu0, "[0-9]-[0-9]*")) %>%
  mutate(temp1 = replace_na(temp1, "60")) %>%
  separate_wider_delim(temp1, "-", names = c("low1", "high1"), too_few = "align_start") %>%
  mutate(high1 = replace_na(high1, "60")) %>%
  mutate(across(c(high1, low1), as.numeric)) %>%
  rowwise() %>%
  mutate(highmed_slope_mean = mean(c(low1, high1))) %>% # high-med mean slope
  mutate(temp2 = str_extract(lowmedium0, "[0-9]-[0-9]*")) %>%
  mutate(temp2 = replace_na(temp2, "60")) %>%
  separate_wider_delim(temp2, "-", names = c("low2", "high2"), too_few = "align_start") %>%
  mutate(high2 = replace_na(high2, "60")) %>%
  mutate(across(c(high2, low2), as.numeric)) %>%
  rowwise() %>%
  mutate(lowmed_slope_mean = mean(c(low2, high2))) %>% # low-med mean slope
  mutate(temp3 = str_extract(low_slope, "[0-9]-[0-9]*")) %>%
  mutate(temp3 = replace_na(temp3, "60")) %>%
  separate_wider_delim(temp3, "-", names = c("low3", "high3"), too_few = "align_start") %>%
  mutate(high3 = replace_na(high3, "60")) %>%
  mutate(across(c(high3, low3), as.numeric)) %>%
  rowwise() %>%
  mutate(low_slope_mean = mean(c(low3, high3))) %>% # low mean slope
  mutate(average_slope = (high_slope_mean +
                            highmed_slope_mean +
                            lowmed_slope_mean +
                            low_slope_mean)/4) %>% # grand mean slope
  mutate(multiplier = 1/cos(deg2rad(average_slope)))
jako_df <- jako_df %>%
  mutate(substrate = case_when(subclass == "Rubble" ~ "boulder",
                               subclass == "Cobble/Gravel" ~ "pebble_granule",
                               subclass == "Mud/Organic" ~ "mud_organic",
                               subclass == "Bedrock" ~ "bedrock",
                               .default = "unknown"))

# add multiplier as value to layer  
tidelands_jako[["recoded_substrate"]] <- jako_df$substrate

# import bathymetry product and crop
bathy <- terra::rast("data/KBL-bathymetry_GWA-area_50m_EPSG3338.tiff")
bathy_mask <- terra::mask(bathy, jako_new)
bathy_crop <- terra::crop(bathy_mask, jako_new)

```

![NOAA interns hard at work collecting mussels in Jakolof Bay.](data/fieldwork.jpg)

## Summary

Public comment from coastal community groups in Alaska, most notably in Kachemak Bay, have indicated concerns regarding shellfish culture in nearshore waters exceeding the carrying capacity of those waters. Specifically, that increases in shellfish aquaculture are removing excessive phytoplankton from surface waters and limiting food resources for wild bivalve and larval fish. To contribute to our knowledge base around filter feeding in Kachemak Bay in support of the development of Aquaculture Opportunity Areas in Alaska, this study estimated plankton clearance rates by mussels and oysters in Jaklof Bay. We found that current estimated clearance rates of native mussels in the bay are an order of magnitude larger than oyster clearance rates. In addition, the average neap tidal exchange within the bay is two orders of magnitude larger than mussel and oyster clearance rates combined.

## Methods

### Mussel metrics

#### Wet weight

Wet weight for mussels was calculated with the following equation derived from lab measurements (n = 66) of mussel length (mm) and tissue weight (g):

(1.1) $$
W_w = 0.000224L^{2.71}
$$ Where *W~w~* is the weight weight of the tissue in grams and *L* was the shell length in millimeters.

#### Clearance rates

Mussel clearance rates were calculated using the equation (*Mytilus edulis*) from [@Jacobs2015]:

(1.2) $$
R_c = 0.0002L^{2.19}
$$ Where *R~c~* was the clearance rate in liters per hour and *L* was the shell length in millimeters. Clearance for all mussels was assumed to be 100%, which is the most conservative value for this analysis.

### Oyster clearance rates

Oyster clearance rates were based on maximum clearance rates reported for *Crassostrea virginica* held at 4 C [@Comeau2008]. Two population values were used to represent the oyster population size in Kachemak Bay. The first was based on interviews with oyster farmers in the area and produced a rough estimate of 1.5 million oysters within the bay. The second estimate is 975,745 oysters, based on a 2023 inventory reported to Alaska Fish and Game. The hourly clearance rate was calculated by dividing the daily rate by 24.

### Spatial analyses

#### Jakolof Bay physical characteristics

Bathymetry data were generated by Martin Renner from: NOAA’s National Geophysical Data Center Kachemak Bay DEM for tsunami modeling [@NOAA2010]; NOAA essential fish habitat smooth sheets [@NOAA2014], and GMRTv4.2 [@Ryan2009]. Grids were produced by reprojecting and bi-cubically up-sampling each existing grid where appropriate, and manually filling in all missing values. Some irregularities and artifacts are expected at the boundaries between coverages. Visual inspections were performed to address some issues, but some likely remain. The tidal exchange of Jakolof Bay was calculated for a neap (3 m) exchange and derived by determining the volume of the bay at two different tidal heights from the 50 m x 50 m bathymetry raster product. Average depth was also calculated from bathymetry data. The total linear distance of the long axis of the bay and widest point were calculated in Google Earth Pro (v)

Intertidal habitat characterizations were derived from polygons created as part of the Kachemak Bay National Estuarine Research Reserve intertidal habitat mapping project [@Pegau2005]. Polygons within Jakolof Bay were extracted (n = 228) with associated substrate categories classified as 'bedrock', 'cobble/gravel', 'mud/organic', and 'rubble'. The rubble and cobble/gravel categories were combined into a single category called 'pebble/granule' and rubble was recoded as 'boulder'. For this analysis, only the boulder and pebble/granule substrate types were targeted. Polygons were bounded by the mean low tide line on the lower edge, and the highest high tide line on the upper edge estimated as 0.514 m and 7.05 m respectively (https://tidesandcurrents.noaa.gov/datums.html?id=9455517). Mean two-dimensional polygon area ranged from 48.9 m^2^ to 82,830.6 m^2^ (mean = 2,684.9, SD = 8,821.1). Mean slope was calculated for each polygon from four recorded slope measurements across the intertidal zone (high slope, high-medium slope, low-medium slope, low slope). To adjust for the effect of slope on the total area of each two-dimensional polygon as viewed from above, the following equation was used to estimate area:

(1.3) $$
A_s = A_0/cos(\alpha) 
$$ Where A~s~ was the final adjusted area, A~0~ was the 2-dimensional area of each polygon, and *⍺* was the mean slope of the polygon. For polygons with unknown or missing slopes, the raw two-dimensional area was used (n = 2).

#### Habitat, bivalve metrics, and clearance

To estimate the likely total area of mussel distribution within each polygon, the total mean vertical distance between the lower and upper edges of the mussel beds within each substrate type were calculated as a proportion of the total vertical distance from the lower to upper edge of all polygons. The adjusted area (A~s~) for each polygon was then multiplied by the the calculated proportion of its respective habitat type that contained mussels. This remaining area was divided into five equal parts representing five quadrats taken at equal intervals from the bottom edge of each mussel bed to the top edge. Horizontal variation in mussel density and size was assumed to be minimal within each polygon, and the mean measured abundance of each quadrat across both substrate types was multiplied by this 1/5 area value divided by the quadrat size (0.5 m x 0.5 m) to extrapolate total mussel abundance per polygon. Mussel size for all individuals within each area was taken as the mean length (mm) of mussels found at that quadrat number across all sites within a substrate type.

Total clearance rates for each polygon were calculated using equation 1.2 with calculated mean mussel lengths multiplied by estimated mussel abundance. Mud/organic substrate clearance rates and unknown substrate clearance rates were calculated according to pebble/granule and boulder rates respectively. Unknown substrates were treated as pebble/granule. Estimated mussel wet weights were calculated in the same way with equation 1.1.

## Results

### Mussel size distribution

```{r}
#| echo: false
#| fig-cap: "Figure 1: Mean abundance of mussels in each quadrat across two substrate types. Quadrats were arranged from the lower edge of each mussel bed (1) to the upper edge of each bed (5). Colors represent the mean mussel shell length across all quadrats within each substrate type."


# Mean abundance and size per substrate and quadrat
mussel_data %>%
  group_by(substrate, quadrat) %>%
  mutate(mean_size = mean(length_mm)) %>%
  select(site, quadrat, substrate, mean_size) %>%
  ungroup() %>%
  group_by(site, quadrat) %>%
  mutate(abundance = n()) %>%
  distinct() %>%
  ggplot(aes(x = quadrat,
             y = abundance,
             fill = mean_size)) +
  stat_boxplot() +
  theme_bw() +
  scale_fill_viridis("Mean Size (mm)",
                     option = "C") +
  facet_wrap(.~ substrate, 
             labeller = labeller(substrate = c("boulder" = "Boulder",
                                               "pebble_granule" = "Pebble/Granule"))) +
  labs(x = "Quadrat", y = "Mean Abundance")

```

### Mussel weight

```{r}
#| echo: false
#| warning: false
#| fig-cap: "Figure 2: Distribution of weight of mussels in grams across all quadrats within each substrate type."


# Mean abundance and weight per substrate and quadrat
mussel_data %>%
  ggplot(aes(x = wet_weight_g)) +
  geom_histogram() +
  theme_bw() +
  facet_wrap(.~ substrate, 
             labeller = labeller(substrate = c("boulder" = "Boulder",
                                               "pebble_granule" = "Pebble/Granule"))) +
  labs(x = "Wet Weight (g)", y = "Mussel Count")

```

```{r}
#| echo: false
#| fig-cap: "Figure 3: Mean weight of mussels in each quadrat across two substrate types. Quadrats were arranged from the lower edge of each mussel bed (1) to the upper edge of each bed (5). Colors represent the mean mussel weight in grams across all quadrats within each substrate type."


# Mean abundance and weight per substrate and quadrat
mussel_data %>%
  group_by(substrate, quadrat) %>%
  mutate(mean_weight = mean(wet_weight_g)) %>%
  select(site, quadrat, substrate, mean_weight) %>%
  ungroup() %>%
  group_by(site, quadrat) %>%
  mutate(abundance = n()) %>%
  distinct() %>%
  ggplot(aes(x = quadrat,
             y = abundance,
             fill = mean_weight)) +
  stat_boxplot() +
  theme_bw() +
  scale_fill_viridis("Mean Weight (g)",
                     option = "C") +
  facet_wrap(.~ substrate, 
             labeller = labeller(substrate = c("boulder" = "Boulder",
                                               "pebble_granule" = "Pebble/Granule"))) +
  labs(x = "Quadrat", y = "Mean Abundance")

```

### Mussel clearance rates

```{r}
#| echo: false
#| fig-cap: "Figure 4: Estimated clearance rates for all mussels within each substrate type from the low edge (quadrat 1) to the high edge (quadrat 5) for all measured sites."


ggplot(mussel_data, aes(x = quadrat,
                        y = filtration_l_hr,
                        fill = substrate)) +
  geom_boxplot() +
  theme_bw() +
  scale_fill_viridis("Substrate", 
                     labels = c("Boulder",
                                "Pebble/Granule"),
                     discrete = TRUE,
                     option = "D",
                     begin = 0.3, 
                     end = 0.7) +
  labs(x = "Quadrat", y = "clearance Rate (L/hr)")

```

### Spatial analyses

#### Jakolof Bay physical characteristics

```{r}
#| echo: false
#| fig-cap: "Figure 5: Substrate polygons in Jakolof Bay."


tidelands_map <- plet(tidelands_jako, "recoded_substrate",
                      fill = 0.5,
                      col = c(viridis(n = 5 ,
                                    begin = 0,
                                    end = 0.9,
                                    option = "A")),
                      weight = 1)
tidelands_map %>%
  addScaleBar() %>%
  addProviderTiles(providers$OpenTopoMap)

```

Total estimated surface area of Jakolof Bay intertidal (m^2^):

```{r}
#| echo: false

# extract raw polygon areas
jako_polygon_area <- expanse(tidelands_jako)  

# create data frame of corrected polygon areas
jako_areas <- data.frame(jako_df$key, jako_df$substrate, jako_polygon_area, jako_df$multiplier) %>%
  mutate(corrected_area = jako_polygon_area * jako_df.multiplier) %>%
  mutate(substrate = jako_df.substrate)

sum(jako_areas$corrected_area)

```

Mean depth of Jakolof Bay in meters:

```{r}
#| echo: false

test <- data.frame(bathy_crop) %>%
  filter(KBL.bathymetry_GWA.area_50m_EPSG3338 <= 0) %>%
  summarise(mean(KBL.bathymetry_GWA.area_50m_EPSG3338))

```

The approximate length of the long axis of the bay was calculated at \~4.5 km and the widest point was \~820 m.

Mean tidal exchange volume for Jakolof Bay (3 m exchange, m^3^ hr^-1^)

```{r}
#| echo: false

bathy_df <- data.frame(bathy_crop) %>%
  filter(KBL.bathymetry_GWA.area_50m_EPSG3338 <= 3) %>%
  mutate(depth_at_3 = KBL.bathymetry_GWA.area_50m_EPSG3338 - 3) %>%
  mutate(volume_3 = abs(depth_at_3) * 50 * 50) %>%
  mutate(volume_0 = case_when(KBL.bathymetry_GWA.area_50m_EPSG3338 > 0 ~ 0,
                              .default = KBL.bathymetry_GWA.area_50m_EPSG3338)) %>%
  mutate(volume_0 = abs(volume_0) * 50 * 50)
 
# volume in cubic meters of 3 m tidal exchange
  sum(bathy_df$volume_3) - sum(bathy_df$volume_0)
  # 6710768 cubic meters

```

#### Mussel clearance

```{r}
#| echo: false
#| print: false
#| warning: false

# Determine mean tidal height for quads within substrates, mean mussel size, 
# mussel count, and clearance rates
mussel_height_summary <- mussel_data %>%
  group_by(substrate, position_percent) %>%
  summarise(across(c(tidal_height_ft,
                     length_mm,
                     filtration_l_hr), mean)) 
mussel_height_mudorg <- mussel_height_summary %>%
  filter(substrate == "pebble_granule") %>%
  mutate(substrate = "mud_organic")
mussel_height_bedrock <- mussel_height_summary %>%
  filter(substrate == "boulder") %>%
  mutate(substrate = "bedrock")
mussel_height_na <- mussel_height_summary %>%
  filter(substrate == "pebble_granule") %>%
  mutate(substrate = "unknown")
all_heights <- mussel_height_summary %>%
  bind_rows(mussel_height_mudorg,
            mussel_height_bedrock,
            mussel_height_na)

mussel_counts <- mussel_data %>%
  group_by(site, substrate, position_percent) %>%
  count() %>%
  ungroup() %>%
  group_by(substrate, position_percent) %>%
  mutate(mean_count = mean(n)) %>%
  ungroup() %>%
  select(substrate, position_percent, mean_count) %>%
  distinct()
mussel_counts_mudorg <- mussel_counts %>%
  filter(substrate == "pebble_granule") %>%
  mutate(substrate = "mud_organic")
mussel_counts_bedrock <- mussel_counts %>%
  filter(substrate == "boulder") %>%
  mutate(substrate = "bedrock")
mussel_counts_na <- mussel_counts %>%
  filter(substrate == "pebble_granule") %>%
  mutate(substrate = "unknown")
all_counts <- mussel_counts %>%
  bind_rows(mussel_counts_mudorg,
            mussel_counts_bedrock,
            mussel_counts_na)

all_heights <- all_heights %>%
  left_join(all_counts, by = c("substrate",
                                  "position_percent")) %>%
  mutate(mean_filtration = filtration_l_hr * mean_count) %>%
  mutate(tidal_height_m = tidal_height_ft/3.281)

# CONSTANTS TO APPLY AFTER SLOPE CORRECTION:
BOULDER_cor <- 0.492425
PEBBLE_GRANULE_cor <- 0.4505921

# mean clearance by substrate type
jako_mussel_area <- jako_areas %>%
  mutate(corrected_mussel_area = case_when(substrate == "pebble_granule" ~ corrected_area * PEBBLE_GRANULE_cor,
                                           substrate == "boulder" ~ corrected_area * BOULDER_cor,
                                           substrate == "mud_organic" ~ corrected_area * PEBBLE_GRANULE_cor,
                                           substrate == "bedrock" ~ corrected_area * BOULDER_cor,
                                           substrate == "unknown" ~ corrected_area * PEBBLE_GRANULE_cor))

# divide area of each mussel area into 5 equal areas and multiply by each mean 
# quadrat clearance rate (does not account for unsurveyed habitat types)
filtration_estimate <- jako_mussel_area %>%
  expand_grid(position_percent = c(10, 30, 50, 70, 90)) %>% # add position percent 
  mutate(band_area = corrected_mussel_area/5) %>% # add 1/5 area of each polygon
  left_join(all_heights, by = c("substrate", "position_percent")) %>% # add clearance rates
  mutate(quadrat_mulitplier = band_area/0.25) %>% # calculate how many 'quadrats' in each area
  mutate(filtration_per_area = mean_filtration * quadrat_mulitplier) %>% # multiply number of quadrats times clearance rate
  mutate(count_estimate = mean_count * quadrat_mulitplier)

```

Table 1: Estimated area of each habitat type available to mussels (m^2^)

```{r}
#| echo: false
#| print: false
#| warning: false

filtration_estimate %>%
  group_by(substrate) %>%
  summarise(total_substrate = sum(corrected_mussel_area))

```

Table 2: Estimated number of mussels across all habitat types

```{r}
#| echo: false
#| print: false
#| warning: false

filtration_estimate %>%
  group_by(substrate) %>%
  summarise(total_mussels = sum(count_estimate))

```

Total estimated number of mussels in the Jakolof Bay:

```{r}
#| echo: false

sum(filtration_estimate$count_estimate)

```

Total estimated wet weight of mussels in the bay (kg):

```{r}
#| echo: false

weight_df <- mussel_data %>%
  select(site, quadrat, substrate, wet_weight_g) %>%
  group_by(site, quadrat, substrate) %>%
  mutate(sum_wt = sum(wet_weight_g)) %>%
  ungroup() %>%
  select(quadrat, substrate, sum_wt) %>%
  distinct() %>%
  group_by(quadrat, substrate) %>%
  mutate(mean_wt = mean(sum_wt)) %>%
  select(quadrat, substrate, mean_wt) %>%
  distinct()
mussel_weight_mudorg <- weight_df %>%
  filter(substrate == "pebble_granule") %>%
  mutate(substrate = "mud_organic")
mussel_weight_bedrock <- weight_df %>%
  filter(substrate == "boulder") %>%
  mutate(substrate = "bedrock")
mussel_weight_na <- weight_df %>%
  filter(substrate == "pebble_granule") %>%
  mutate(substrate = "unknown")
all_weight <- weight_df %>%
  bind_rows(mussel_weight_mudorg,
            mussel_weight_bedrock,
            mussel_weight_na)

# divide area of each mussel area into 5 equal areas and multiply by each mean 
weight_estimate <- jako_mussel_area %>%
  expand_grid(quadrat = c("1", "2", "3", "4", "5")) %>% # add position percent 
  mutate(band_area = corrected_mussel_area/5) %>% # add 1/5 area of each polygon
  left_join(all_weight, by = c("substrate", "quadrat")) %>% # add clearance rates
  mutate(quadrat_mulitplier = band_area/0.25) %>% # calculate how many 'quadrats' in each area
  mutate(weight_per_area = mean_wt * quadrat_mulitplier) 

sum(weight_estimate$weight_per_area)/1000

```

Table 3: Total liters filtered per hour per substrate type.

```{r}
#| echo: false

filtration_estimate %>%
  group_by(substrate) %>%
  summarise(total_filtration = sum(filtration_per_area))
  
```

```{r}
#| echo: false
#| warning: false
#| fig-cap: "Figure 6: Estimated total clearance rate for each of the five mussel zones defined by tidal positions. Tidal heights are estimated from mean quadrat height within that substrate type for each zone. Lines represent the estimated filtration rate for each polygon (accounting for corrected area, mean mussel density, mean mussel size), for every intertidal habitat polygon in Jakolof Bay. Polygons without representative field sampling had calculated values from derived from either 'boulder' or 'pebble/granule' mussels sizes and densities (see methods)."

# calculate 0 abundance height for mussels (lo and hi)
hilo <- filtration_estimate %>%
  group_by(substrate, tidal_height_m) %>%
  summarise(filtration_sum = sum(filtration_per_area)) %>%
  summarise(max(tidal_height_m), min(tidal_height_m)) %>%
  mutate(tidalrange = `max(tidal_height_m)` - `min(tidal_height_m)`) %>%
  mutate(tenpercent = tidalrange/8) %>%
  mutate(upperbound = `max(tidal_height_m)` + tenpercent) %>%
  mutate(lowerbound = `min(tidal_height_m)` - tenpercent) %>%
  select(substrate, upperbound, lowerbound) %>%
  pivot_longer(!substrate, names_to = "filtration_sum", 
               values_to = "tidal_height_m") %>%
  mutate(filtration_sum = 0) %>%
  ungroup()

# plot mean clearance by position
filtration_estimate %>%
  group_by(substrate, tidal_height_m) %>%
  summarise(filtration_sum = sum(filtration_per_area)) %>%
  ungroup() %>%
  add_row(hilo) %>%
    ggplot(aes(x = tidal_height_m,
             y = filtration_sum,
             color = substrate)) +
  geom_smooth(method = "lm",
              se = FALSE,
              formula = y~x + I(x^2)) +
  scale_color_viridis("Substrate",
                      labels = c("Bedrock",
                                 "Boulder",
                                 "Mud/Organic",
                                 "Pebble/Granule",
                                 "Unknown"),
                     discrete = TRUE,
                     option = "A",
                     begin = 0, 
                     end = 0.9) +
  theme_bw() +
  labs(x = "Tidal height (m)", y = Total~clearance~rate~(L~hr^-1))


```

Total estimated cubic meters filtered per hour:

```{r}
#| echo: false

sum(filtration_estimate$filtration_per_area)/1000
  
```

#### Oyster clearance

clearance rate of oysters in cubic meters per hour in Jakolof Bay assuming 975,745 oysters:

```{r}
#| echo: false

(975545 * 2.68)/1000

```

clearance rate of oysters in cubic meters per hour in Jakolof Bay assuming 1.5 million oysters:

```{r}
#| echo: false

(1500000 * 2.68)/1000

# assuming 500,000 oysters per farm, it would take 17.05334 oyster farms to equal the filtration rate of the mussel population: 17.05334 = (22851.48/0.00268)/500000

# same assumptions, it would take 5008.036 oyster farms to equal the tidal flux: 5008.036 = (6710768/0.00268)/500000

```

#### Clearance comparison

```{r}
#| echo: false
#| warning: false
#| fig-cap: "Figure 7: Estimated mussel and oyster clearance rates in Jakolof Bay based on population size. A mean clearance rate per individual within a group was calculated and scaled additively to the whole population within each group. Values were pseudo-log transformed to set the origin at zero, and a generalized linear model with link = log was used to create the curves. Horizontal lines represent the total volume and volume exchange of Jakolof Bay, and the estimated clearance rates at specific population sizes used in the analysis for each group."

oys_filt_rate <- 2.68/1000 # max rate in m^3/ind/hr
muss_filt_rate <- 28290.25/113897683 # estimated rate in m^3/ind/hr
tibble(pop = c(1, 975545, 1500000, 113897638, 1, 975545, 1500000, 113897638), 
       org = c("mussel", "mussel", "mussel", "mussel", "oyster", "oyster", "oyster", "oyster"),
       rate = c(0.000248383, 242.3088, 372.5745, 28290.24, 0.00268, 2614.461, 4020, 305245.7)) %>%
ggplot(aes(x = pop, y = rate, color = org)) +
  geom_segment(aes(x = 113897638, xend = 113897638, y = 0, yend = 28290.24), 
               col = viridis(n = 1, begin = 0.3, option = "C")) + # mussel vert
  geom_segment(aes(x = 0, xend = 113897638, y = 28290.24, yend = 28290.24),
               col = viridis(n = 1, begin = 0.3, option = "C")) + # mussel hor
  geom_segment(aes(x = 975545, xend = 975545, y = 0, yend = 2614.461)) + # oyster low vert
  geom_segment(aes(x = 0, xend = 975545, y = 2614.461, yend = 2614.461)) + # oyster low hor
  geom_segment(aes(x = 1500000, xend = 1500000, y = 0, yend = 4020)) + # oyster hi vert
  geom_segment(aes(x = 0, xend = 1500000, y = 4020, yend = 4020)) + # oyster hi hor 
  geom_point() +
  scale_x_continuous(trans = scales::pseudo_log_trans(10)) +
  scale_y_continuous(trans = scales::pseudo_log_trans(10)) +
  stat_smooth(method = "glm", formula = y~x,
              se = FALSE,
              method.args = list(family = gaussian(link = 'log'))) +
  scale_color_viridis("bivalve",
                      discrete = TRUE,
                      option = "C",
                      begin = 0.3,
                      end = 0.8) +
  geom_hline(yintercept = 6710768, 
             color = "mediumblue",
             lwd = 2) + # 3 meter exchange m^3 / hr
  geom_hline(yintercept = 19237050, 
             color = "darkblue",
             lwd = 2) + # 3 meter tide volume m^3
  theme_bw() +
  labs(x = log[10]~population~size, 
       y = log[10]~clearance~rate~(m^3~hr^-1)) +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
  annotate("text",
           x = 800, 
           y = 30000000, 
           label = "Jakolof Bay volume (+3 m tide)", 
           color = "darkblue", 
           size = 3) +
  annotate("text",
           x = 1000, 
           y = 10000000, 
           label = "Jakolof Bay 3 m exchange volume", 
           color = "mediumblue", 
           size = 3) +
    annotate("text",
           x = 800, 
           y = 40000, 
           label = "Estimated total mussel clearance", 
           color = viridis(n = 1, begin = 0.3, option = "C"), 
           size = 3) +
      annotate("text",
           x = 1150, 
           y = 6000, 
           label = "Estimated maximum oyster clearance", 
           color = viridis(n = 1, begin = 0.8, option = "C"), 
           size = 3) +
        annotate("text",
           x = 1100, 
           y = 2000, 
           label = "Estimated minimum oyster clearance", 
           color = viridis(n = 1, begin = 0.8, option = "C"), 
           size = 3) 


```

```{r}
#| echo: false
#| warning: false
#| fig-cap: "Figure 8: Proportional hourly clearance rates of mussels and oysters compared to the hourly tidal exchange and volume of Jakolof Bay at a +3 m tide."
#| 
# size figure of clearance
tibble(org = c("Jakolof volume", "3 m exchange", "mussel filtration", "oyster filtration"),
       x = c(10000000, 10000000, 10500000, 11000000),
       y = c(10000000, 10000000, 10500000, 9500000),
       rate = c(19237050, 6710768, 28290.24, 4020)) %>%
ggplot() +
  geom_point(aes(x = x, 
                 y = y, 
                 color = org,
                 size = rate)) +
  scale_size(range = c(1,120)) +
  scale_x_continuous(limits = c(6000000,14000000)) +
  scale_y_continuous(limits = c(0,20000000)) +
  scale_color_manual(values = c( "#277F8EFF", "#77D153FF", "#440154FF", "#F1E51DFF")) +
  theme_void() +
  guides(size = FALSE) +
  theme(legend.title=element_blank()) +
  annotate("text", x = 9400000, y = 11500000, label = "bold(mussel)", color = "white", parse = TRUE) +
  annotate("text", x = 10500000, y = 7800000, label = "bold(oyster)", color = "white", parse = TRUE) +
  annotate("text", x = 10000000, y = 17000000, label = "bold(tidal~exchange)", color = "white", parse = TRUE) +
  geom_segment(aes(x = 9850000, xend = 10300000,
               y = 11300000, yend = 10700000),
               color = "white",
               lwd = 1,
               arrow = arrow(length = unit(0.1, "inches"))) +
  geom_segment(aes(x = 10500000, xend = 10900000,
               y = 8200000, yend = 9200000),
               color = "white",
               lwd = 1,
               arrow = arrow(length = unit(0.1, "inches"))) +
    geom_segment(aes(x = 10000000, xend = 10000000,
               y = 16500000, yend = 15300000),
               color = "white",
               lwd = 1,
               arrow = arrow(length = unit(0.1, "inches"))) 

  

```

## References

::: {#refs}
:::
